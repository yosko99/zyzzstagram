generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String         @id @default(uuid())
    username      String         @unique
    email         String         @unique
    description   String?
    password      String
    posts         Post[]
    comments      Comment[]
    likedPosts    Post[]         @relation("PostLikes")
    savedPosts    Post[]         @relation("SavedPosts")
    likedComments Comment[]      @relation("CommentLikes")
    followers     User[]         @relation("UserFollowers")
    following     User[]         @relation("UserFollowers")
    stories       Story[]
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @default(now()) @updatedAt
    notifications Notification[]
}

model Post {
    id          String    @id @default(uuid())
    imageURL    String
    description String
    published   Boolean   @default(false)
    author      User      @relation(fields: [authorId], references: [id])
    authorId    String
    likedBy     User[]    @relation("PostLikes")
    comments    Comment[]
    savedBy     User[]    @relation("SavedPosts")
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @default(now()) @updatedAt
}

model Comment {
    id        String   @id @default(uuid())
    content   String
    author    User     @relation(fields: [authorId], references: [id])
    authorId  String
    post      Post     @relation(fields: [postId], references: [id])
    postId    String
    likedBy   User[]   @relation("CommentLikes")
    createdAt DateTime @default(now())
}

model Story {
    id        String   @id @default(uuid())
    imageURL  String
    createdAt DateTime @default(now())
    user      User     @relation(fields: [userId], references: [id])
    userId    String
}

model Notification {
    id        String   @id @default(uuid())
    message   String
    read      Boolean  @default(false)
    createdAt DateTime @default(now())
    user      User     @relation(fields: [userId], references: [id])
    userId    String
}
